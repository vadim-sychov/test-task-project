# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    storagePath: '%kernel.project_dir%/storage'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    Redis:
        class: Redis
        calls:
            - method: connect
              arguments:
                  - '%env(REDIS_HOST)%'
                  - '%env(REDIS_PORT)%'

    App\Cache\CacheInterface:
        class: App\Cache\RedisCache

    App\Repository\UserRepository:
        arguments:
            $storagePath: '%storagePath%/%env(STORAGE_FILENAME_USERS)%.json'

    App\Repository\TrackingDataRepository:
        arguments:
            $storagePath: '%storagePath%/%env(STORAGE_FILENAME_TRACKING_DATA)%.json'

    SocialTech\SlowStorage:
        class: SocialTech\SlowStorage

    SocialTech\StorageInterface:
        class: App\Service\JsonStorageDecorator
        arguments:
            $storage: '@SocialTech\SlowStorage'